// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id           String    @id @default(cuid())
  email        String    @unique
  name         String?
  passwordHash String?
  password     String?   // added this field for compatibility
  role         String    @default("USER") // Changed from enum to string for SQLite
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt

  @@map("users")
}

model Project {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  description String
  images      String   // JSON string for SQLite compatibility
  videoUrl    String?
  tags        String   // JSON string for SQLite compatibility
  techStack   String   // JSON string for SQLite compatibility
  technologies String? // JSON string for SQLite compatibility - made optional
  demoUrl     String?
  repoUrl     String?
  githubUrl   String?  // added this field
  featured    Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  reviews     Review[]

  @@map("projects")
}

model Review {
  id        String   @id @default(cuid())
  name      String
  company   String?
  rating    Int
  text      String
  content   String?  // made optional
  projectId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  project   Project? @relation(fields: [projectId], references: [id], onDelete: SetNull)

  @@map("reviews")
}

model ContactMessage {
  id        String   @id @default(cuid())
  name      String
  email     String
  subject   String?
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())

  @@map("contact_messages")
}

model AboutMe {
  id           String   @id @default(cuid())
  name         String   @default("Muhammad Taimoor")
  tagline      String   @default("Your Vision, Digital Reality.")
  description  String   @default("I specialize in Shopify e-commerce stores, WordPress landing pages, and Next.js applications. From Dellnux's complete Shopify store to SevenKoncepts' Next.js website, I deliver results. When you hire me, you work directly with me. No project managers, no hand-offs. Just a direct line to your successful online presence.")
  email        String   @default("taimoor@gmail.com")
  profileImage String?
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("about_me")
}

model WebsiteSettings {
  id          String   @id @default(cuid())
  siteName    String   @default("Portfolio")
  siteDescription String @default("My Portfolio Website")
  siteUrl     String   @default("")
  logo        String?
  favicon     String?
  primaryColor String  @default("#00D4FF")
  secondaryColor String @default("#7C3AED")
  socialLinks String   @default("{}") // JSON string for SQLite compatibility
  seoTitle    String?
  seoDescription String?
  seoKeywords String?
  analyticsId String?
  contactEmail String?
  contactPhone String?
  contactAddress String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("website_settings")
}

model MediaFile {
  id          String   @id @default(cuid())
  filename    String
  originalName String
  mimeType    String
  size        Int
  url         String
  alt         String?
  category    String   @default("general") // general, projects, gallery, etc.
  uploadedBy  String
  createdAt   DateTime @default(now())

  @@map("media_files")
}

model Analytics {
  id          String   @id @default(cuid())
  page        String
  views       Int      @default(0)
  uniqueViews Int      @default(0)
  date        DateTime @default(now())
  createdAt   DateTime @default(now())

  @@map("analytics")
}

model BlogPost {
  id          String   @id @default(cuid())
  title       String
  slug        String   @unique
  content     String
  excerpt     String?
  featuredImage String?
  published   Boolean  @default(false)
  tags        String   // JSON string for SQLite compatibility
  authorId    String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("blog_posts")
}

model Content {
  id        String   @id @default(cuid())
  key       String   @unique
  title     String
  content   String
  type      String   // text, heading, description
  section   String   // hero, about, projects, etc.
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("content")
}

// Role enum removed for SQLite compatibility - using string instead
